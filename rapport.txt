Le projet intègre une version plus faible du logiciel git, conçue pour être utilisable. Elle intègre la possibilité de gérer des commits, des branches, merge, ainsi qu'un système de backup en ligne.
Les commits et les checkouts se font en utilisant le principe du sha-1 expliqué dans writeyourselfagit. Pour les branches, il est decidé que dans le dossier banches chaque branche a son dossier, et chaque branche a une HEAD (le dernier commit de la branche) ainsi qu'une liste de commitsavec leurs messages de commit. La commande merge prend en entrée une branche, et unit la HEAD de la branche courante avec cette branche. Si 2 fichiers ont le même nom mais pas le même contenu, alors le merge échoue.En plus du système local, on a ajouté un système de backup qu'on a entièrement écrit en Go. 
On voulait faire interagir plusieurs outils différents pour apprendre à le faire correctement. De plus, Go est un bon candidat pour ce projet : le paquet http permet d'envoyer et de recevoir un fichier très facilement, et avec deux gestionnaires différents sur /upload et /list le serveur est simple à concevoir. De façon générale, le langage fonctionne bien pour faire interagir des flux de données. Le protocole de backup est le suivant : on envoie une première requête pour avoir la liste des fichiers stockés, on émet une requête pour chacun d'entre eux et on copie son contenu. Le processus de push est le suivant : on cherche l'endroit où est la racine du dépôt bite, et on upload tous les fichiers un par un (grâce à filepath.Walk). Côté serveur, on a deux gestionnaires : le premier pour lister les fichiers présents sur /list, le deuxième pour upload les fichiers de /store sur /upload.
